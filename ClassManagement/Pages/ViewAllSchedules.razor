@page "/Schedules"
@inject ClassesService classesService
@inject ISnackbar Snackbar
@inject GradesService gradesService
@inject NavigationManager NavManager
@inject SessionService session
@using ClassManagement.Components



<div style="display:flex; justify-content: center;">
    @for (int i = 0; i < 7; i++)
    {
        <div style="display: block; justify-content: center; margin: 2ch 2ch; max-width: 120px;">
            <h4>@GetDay(i)</h4>
            <DayColumn day=i schedules=data[i] />
        </div>
    }
    </div>

@code {
    SortedSet<ClassSchedule>[] data = new SortedSet<ClassSchedule>[7];
    SortedSet<ClassSchedule> AllSchedules;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        if (AllSchedules is null)
        {
            AllSchedules = gradesService.GetAllSchedules();
        }
        for (int i=0; i < 7; i++)
        {
            if (data[i] is null)
            data[i] = GetSchedulesDayOfWeek(i);

        }

    }

    public SortedSet<ClassSchedule> GetSchedulesDayOfWeek(int i)
    {
        if (i == 0)
            return new(AllSchedules.Where(s => s.Day == DayOfWeek.Monday && s.OwnerUsername == session.UsernameState).ToArray());
        else if (i == 1)
            return new(AllSchedules.Where(s => s.Day == DayOfWeek.Tuesday && s.OwnerUsername == session.UsernameState).ToArray());
        else if (i == 2)
            return new(AllSchedules.Where(s => s.Day == DayOfWeek.Wednesday && s.OwnerUsername == session.UsernameState).ToArray());
        else if (i == 3)
            return new(AllSchedules.Where(s => s.Day == DayOfWeek.Thursday && s.OwnerUsername == session.UsernameState).ToArray());
        else if (i == 4)
            return new(AllSchedules.Where(s => s.Day == DayOfWeek.Friday && s.OwnerUsername == session.UsernameState).ToArray());
        else if (i == 5)
            return new(AllSchedules.Where(s => s.Day == DayOfWeek.Saturday && s.OwnerUsername == session.UsernameState).ToArray());
        else
            return new(AllSchedules.Where(s => s.Day == DayOfWeek.Sunday && s.OwnerUsername == session.UsernameState).ToArray());

    }

    public string GetDay(int i)
    {
        if (i == 0) return "Monday";
        else if (i == 1) return "Tuesday";
        else if (i == 2) return "Wednesday";
        else if (i == 3) return "Thursday";
        else if (i == 4) return "Friday";
        else if (i == 5) return "Saturday";
        else return "Sunday";
    }
}
